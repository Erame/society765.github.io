<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The site of random C code</title>
    <link>https://society765.github.io/posts/</link>
    <description>Recent content in Posts on The site of random C code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Feb 2020 00:10:01 -0800</lastBuildDate>
    
	<atom:link href="https://society765.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2020 02 17</title>
      <link>https://society765.github.io/posts/2020-02-17/</link>
      <pubDate>Mon, 17 Feb 2020 00:10:01 -0800</pubDate>
      
      <guid>https://society765.github.io/posts/2020-02-17/</guid>
      <description>/* Seed: -1063156307 */ #include &amp;lt;stdint.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; /* Global variables */ int8_t c_0 = 0x0; uint16_t us_1 = 0x46D3; uint8_t uc_2 = 0x33; uint32_t ui_3 = 0x0CB8704D; uint16_t us_4 = 0x6075; int32_t i_5 = 0xDD20176E; int16_t s_6 = 0x6DB4; int64_t li_7 = 0x014719442B4A01EE; int64_t li_8 = 0xEF75D2D3F8764779; /* Function prototypes */ int64_t func_0(); int64_t func_0() { uint16_t us_9 = 0x0; int64_t li_10 = 0xEE3CC1DB040D6D06; for(us_4 = 30; us_4 &amp;lt;= 57; us_4 += 1) { int32_t i_11 = 0x1A9FC8DF; } } int main(void) { func_0(); return 0; }  </description>
    </item>
    
    <item>
      <title>2020 02 16</title>
      <link>https://society765.github.io/posts/2020-02-16/</link>
      <pubDate>Sun, 16 Feb 2020 00:10:01 -0800</pubDate>
      
      <guid>https://society765.github.io/posts/2020-02-16/</guid>
      <description>/* Seed: 317034486 */ #include &amp;lt;stdint.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; /* Global variables */ uint32_t ui_0 = 0x0; int32_t i_1 = 0x0; uint16_t us_2 = 0x0; int64_t li_3 = 0x34112D18C0EEBB9D; int16_t s_4 = 0x9609; int16_t s_5 = 0x0; int8_t c_6 = 0x63; int8_t c_7 = 0x0; uint16_t us_8 = 0x8C5A; /* Function prototypes */ int16_t func_1(); int16_t func_0(); int16_t func_1() { uint16_t *ptr_9 = &amp;amp;us_2; for(s_5 = -8; s_5 &amp;lt;= 35; s_5 += 1) { if(((((s_5 == li_3) !</description>
    </item>
    
    <item>
      <title>2020 02 15</title>
      <link>https://society765.github.io/posts/2020-02-15/</link>
      <pubDate>Sat, 15 Feb 2020 00:10:01 -0800</pubDate>
      
      <guid>https://society765.github.io/posts/2020-02-15/</guid>
      <description>/* Seed: 1307841800 */ #include &amp;lt;stdint.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; /* Global variables */ uint8_t uc_0 = 0x9C; int16_t s_1 = 0x0; uint16_t us_2 = 0x9C49; /* Function prototypes */ uint64_t func_1(uint16_t us_3, int8_t c_4, uint64_t uli_5); uint8_t func_0(); uint64_t func_1(uint16_t us_3, int8_t c_4, uint64_t uli_5) { uint8_t uc_6 = 0x0; uint8_t *ptr_7 = &amp;amp;uc_6; if((((us_3 += (uli_5 &amp;gt;= *ptr_7)) * (c_4 %= (0x2FA733E6 || uli_5))) || (s_1 -= ((c_4 &amp;lt;= uli_5) &amp;amp; (us_3 |= uc_0))))) { uint64_t *ptr_8 = &amp;amp;uli_5; if(((((uc_0 / uli_5) ?</description>
    </item>
    
    <item>
      <title>2020 02 14</title>
      <link>https://society765.github.io/posts/2020-02-14/</link>
      <pubDate>Fri, 14 Feb 2020 00:10:01 -0800</pubDate>
      
      <guid>https://society765.github.io/posts/2020-02-14/</guid>
      <description>/* Seed: 822957115 */ #include &amp;lt;stdint.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; /* Global variables */ int32_t i_0 = 0x13D0104C; uint64_t uli_1 = 0xD5D3C8007AD2C29C; uint16_t us_2 = 0x0; uint32_t ui_3 = 0xDE3AE4A2; int8_t c_4 = 0xBE; uint64_t uli_5 = 0x131238C0A82346D1; int64_t li_6 = 0x0; int8_t c_7 = 0x4E; int64_t li_8 = 0x1E0CC74EB50EECF8; /* Function prototypes */ int32_t func_1(); int32_t func_0(); int32_t func_1() { int32_t *ptr_9 = &amp;amp;i_0; int16_t s_10 = 0x236C; ptr_9 = &amp;amp;uli_5; if(((s_10 = (ui_3 ^= (0x8F82 ?</description>
    </item>
    
    <item>
      <title>2020 02 13</title>
      <link>https://society765.github.io/posts/2020-02-13/</link>
      <pubDate>Thu, 13 Feb 2020 00:10:01 -0800</pubDate>
      
      <guid>https://society765.github.io/posts/2020-02-13/</guid>
      <description>/* Seed: 1754568793 */ #include &amp;lt;stdint.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; /* Global variables */ int32_t i_0 = 0x0; uint32_t ui_1 = 0x0; uint64_t uli_2 = 0x0; uint8_t uc_3 = 0x0; int32_t i_4 = 0x0; uint16_t us_5 = 0x169B; /* Function prototypes */ uint64_t func_1(int64_t li_6, int64_t li_7, int32_t i_8, int64_t li_9); int16_t func_0(); uint64_t func_1(int64_t li_6, int64_t li_7, int32_t i_8, int64_t li_9) { int64_t *ptr_10 = &amp;amp;li_6; } int16_t func_0() { uint64_t *ptr_6 = &amp;amp;uli_2; for(uli_2 = 30; uli_2 &amp;lt;= 84; uli_2 += 1) { int8_t c_7 = 0xB4; ui_1 = (func_1((c_7 += (0xC4 &amp;amp;&amp;amp; 0xF3ADF11D)), ((uli_2 | 0x0) &amp;gt;= (c_7 &amp;amp;= i_4)), (i_0 |= (i_4 * uc_3)), ((uli_2 &amp;amp;= i_0) || (i_0 * uli_2))) | (i_0 /= ((ui_1 ?</description>
    </item>
    
    <item>
      <title>2020 02 12</title>
      <link>https://society765.github.io/posts/2020-02-12/</link>
      <pubDate>Wed, 12 Feb 2020 00:10:01 -0800</pubDate>
      
      <guid>https://society765.github.io/posts/2020-02-12/</guid>
      <description>/* Seed: -1976839800 */ #include &amp;lt;stdint.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; /* Global variables */ int64_t li_0 = 0x0; int16_t s_1 = 0x7967; int32_t i_2 = 0x4D4854B0; uint64_t uli_3 = 0x0; uint16_t us_4 = 0xAFD8; uint32_t ui_5 = 0x1ECF0EC7; uint64_t uli_6 = 0xFB0394BE96E0299C; uint8_t uc_7 = 0x4E; uint16_t us_8 = 0x0; int32_t i_9 = 0x4CE04633; /* Function prototypes */ int64_t func_1(uint32_t ui_10); uint8_t func_0(); int64_t func_1(uint32_t ui_10) { uint32_t ui_11 = 0xFB6D289E; uint32_t ui_12 = 0x7FB96766; if((us_4 %= (li_0 &amp;amp;= ((uli_3 ?</description>
    </item>
    
    <item>
      <title>2020 02 11</title>
      <link>https://society765.github.io/posts/2020-02-11/</link>
      <pubDate>Tue, 11 Feb 2020 00:10:01 -0800</pubDate>
      
      <guid>https://society765.github.io/posts/2020-02-11/</guid>
      <description>/* Seed: 443046202 */ #include &amp;lt;stdint.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; /* Global variables */ uint8_t uc_0 = 0x1F; uint64_t uli_1 = 0xA57C749F06516684; uint64_t uli_2 = 0x0; uint32_t ui_3 = 0x0; int64_t li_4 = 0x3CEC6FCDB6222A7B; uint8_t uc_5 = 0x1E; int8_t c_6 = 0x41; int32_t i_7 = 0x618C8B86; int8_t c_8 = 0x64; int32_t i_9 = 0xAE4C8B71; /* Function prototypes */ int16_t func_0(); int16_t func_0() { int32_t *ptr_10 = &amp;amp;i_9; int8_t *ptr_11 = &amp;amp;c_6; } int main(void) { func_0(); return 0; }  </description>
    </item>
    
    <item>
      <title>2020 02 10</title>
      <link>https://society765.github.io/posts/2020-02-10/</link>
      <pubDate>Mon, 10 Feb 2020 00:28:39 -0800</pubDate>
      
      <guid>https://society765.github.io/posts/2020-02-10/</guid>
      <description>/* Seed: -1629431492 */ #include &amp;lt;stdint.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; /* Global variables */ int32_t i_0 = 0xDE2C84D8; /* Function prototypes */ int8_t func_1(int8_t c_1, int32_t i_2, uint16_t us_3); uint32_t func_0(); int8_t func_1(int8_t c_1, int32_t i_2, uint16_t us_3) { uint64_t uli_4 = 0xB5F7D3459833772F; int16_t s_5 = 0xAF65; i_2 /= (us_3 &amp;amp;= (((i_2 &amp;amp;&amp;amp; 0x0) || (c_1 &amp;amp;&amp;amp; us_3)) &amp;lt; (s_5 += (i_2 &amp;lt; uli_4)))); } uint32_t func_0() { int32_t *ptr_1 = &amp;amp;i_0; func_1(((*ptr_1 += (i_0 ^= (0x89C2A16D &amp;lt; *ptr_1))) &amp;gt;= ((*ptr_1 *= (*ptr_1 /= i_0)) || (*ptr_1 ^= (0x0 ?</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://society765.github.io/posts/my-first-post/</link>
      <pubDate>Sun, 09 Feb 2020 23:11:08 -0800</pubDate>
      
      <guid>https://society765.github.io/posts/my-first-post/</guid>
      <description> Hello world #include &amp;lt;stdio.h&amp;gt; int main(int argc, char** argv){ printf(&amp;quot;hello world\n&amp;quot;); return 0; }  </description>
    </item>
    
  </channel>
</rss>